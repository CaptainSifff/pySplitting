# AUTOGENERATED! DO NOT EDIT! File to edit: 00_core.ipynb (unless otherwise specified).

__all__ = ['findpos', 'isstrictlyascending', 'alpha', 'CreateMuVectors']

# Cell

from sympy import factorial as fact
from itertools import product


# Mathematica counts from 1, python from zero!!!!!!
def findpos(lam):
    retval = -1
    i = 0
    while (i < len(lam)-1) and (retval == -1):
        if lam[i] == lam[i+1]:
            i = i + 1
        else:
            retval = i
    if retval == -1:
        retval = len(lam)-1
    return retval

# Cell
def isstrictlyascending(lam):
    """This determines whether the index string is a strictly ascending sequence

    Parameters
    ----------
    lam : an indexable object of things that are comparable. Usually an array of integers

    Returns
    -------
    bool : true if the sequence is strictly ascending, else false.
    """
    retval = True
    i = 0
    while (i < len(lam)-1) and retval == True:
        if lam[i] < lam[i+1]:
            i = i+1
        else:
            retval = False
    return retval

# Cell
def alpha(lam):
    retval = 1
    if (len(lam) > 1) and not isstrictlyascending(lam):
        pos = findpos(lam)
        retval = 1/fact(pos+1)*alpha(lam[pos+1:])
    return retval

# Cell
def CreateMuVectors(p,k):
    """This function creates the set of possible $$\mu$$ vectors.

    Parameters
    ----------
    p : the considered order
    k : 1 <=k<=p

    Returns
    -------
    array : A list of multiindices
    """
    absmu = p-k
    retval = []
    for el in product(range(0,absmu+1),repeat=k):
        if sum(el)<=absmu:
            retval.append(el)
    return retval